[{"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\index.js":"1","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\App.js":"2","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\OpenTrades.js":"3","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Layout\\MainNavigation.js":"5","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\NewTrade\\NewTradeForm.js":"6","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Button.js":"7","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Input.js":"8","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\TradeStats.js":"9","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\ClosedTrades.js":"10","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Modal.js":"11","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\TradeList.js":"12","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\Trade.js":"13","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\TradeListCards.js":"14","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Toggle.js":"15"},{"size":276,"mtime":1621216756618,"results":"16","hashOfConfig":"17"},{"size":865,"mtime":1621252330627,"results":"18","hashOfConfig":"17"},{"size":3289,"mtime":1621858456880,"results":"19","hashOfConfig":"17"},{"size":250,"mtime":1621218311387,"results":"20","hashOfConfig":"17"},{"size":2265,"mtime":1621252631362,"results":"21","hashOfConfig":"17"},{"size":2496,"mtime":1621859524673,"results":"22","hashOfConfig":"17"},{"size":524,"mtime":1621424355781,"results":"23","hashOfConfig":"17"},{"size":698,"mtime":1621510470267,"results":"24","hashOfConfig":"17"},{"size":123,"mtime":1621252290603,"results":"25","hashOfConfig":"17"},{"size":153,"mtime":1621252302785,"results":"26","hashOfConfig":"17"},{"size":4103,"mtime":1621859513227,"results":"27","hashOfConfig":"17"},{"size":3425,"mtime":1621857727334,"results":"28","hashOfConfig":"17"},{"size":461,"mtime":1621338445366,"results":"29","hashOfConfig":"17"},{"size":3023,"mtime":1621510575843,"results":"30","hashOfConfig":"17"},{"size":2452,"mtime":1621862150305,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mzyie3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\index.js",[],["70","71"],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\App.js",["72"],"import  { Route, Switch} from 'react-router-dom';\r\n\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport NewTradeForm from './components/NewTrade/NewTradeForm';\r\nimport OpenTradesPage from \"./pages/OpenTrades\";\r\nimport ClosedTradesPage from \"./pages/ClosedTrades\";\r\nimport TradeStatsPage from \"./pages/TradeStats\";\r\n\r\nfunction App () {\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path=\"/\" exact={true}>\r\n                    <OpenTradesPage></OpenTradesPage>\r\n                </Route>\r\n                <Route path='/closed-trades'>\r\n                    <ClosedTradesPage></ClosedTradesPage>\r\n                </Route>\r\n                <Route path='/trade-stats'>\r\n                    <TradeStatsPage></TradeStatsPage>\r\n                </Route>\r\n            </Switch>       \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\OpenTrades.js",["73"],"import Modal from \"../components/UI/Modal\";\r\nimport NewTradeForm from \"../components/NewTrade/NewTradeForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { PlusIcon as PlusIconOutline } from '@heroicons/react/outline'\r\nimport { useState, useEffect } from \"react\";\r\nimport TradeList from \"../components/Trade/TradeList\";\r\n\r\n\r\nfunction OpenTradesPage() {\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [newTradeAdded, setNewTradeAdded] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [loadedTrades, setLoadedTrades] = useState([]);\r\n\r\n    const modalAction = {\r\n        buttonTitle:\"Submit\",\r\n        buttonType:\"submit\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetch(\"https://tether-89676-default-rtdb.firebaseio.com/trades.json\")\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            const trades = [];\r\n\r\n            for (const key in data) {\r\n                const trade = {\r\n                    id: key,\r\n                    ...data[key]\r\n                };\r\n                trades.push(trade);\r\n            };\r\n            setLoadedTrades(trades);\r\n            setIsLoading(false);\r\n            setNewTradeAdded(false);\r\n        })\r\n    }, [newTradeAdded]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <section>\r\n                <h1>Loading...</h1>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    function newTradeHandler() {\r\n        // Display Modal for New Trade entry\r\n        setDisplayModal(true);\r\n    }\r\n\r\n    function newTradeFormHideHandler () {\r\n        // Hide Modal on cancel or \r\n        setDisplayModal(false);\r\n    }\r\n\r\n    function addTradeHandler(newTradeData) {\r\n        // Post Trade to backend\r\n        fetch(\r\n            \"https://tether-89676-default-rtdb.firebaseio.com/trades.json\",\r\n            {\r\n              method: 'POST',\r\n              body: JSON.stringify(newTradeData),\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n          ).then(() => {\r\n            //\r\n          })\r\n\r\n        // Close Modal after form submission\r\n        newTradeFormHideHandler();\r\n        setNewTradeAdded(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {displayModal && <Modal onHide={newTradeFormHideHandler} modalAction={modalAction}>\r\n            <NewTradeForm onAddTrade={addTradeHandler}></NewTradeForm>     \r\n        </Modal>}\r\n        <section>\r\n        <button \r\n                type=\"button\" \r\n                onClick={newTradeHandler}\r\n                className=\"inline-flex items-center p-3 border border-transparent rounded-full shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n            <PlusIconOutline className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n        </button>\r\n        </section>\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\r\n        <div className=\"max-w-7xl mx-auto\"><TradeList trades={loadedTrades}></TradeList></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenTradesPage;","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Layout\\MainNavigation.js",["74","75","76"],"import { Link } from \"react-router-dom\";\r\n\r\nconst navigation = [\r\n  { name: 'Open Trades', href: '/' },\r\n  { name: 'Closed Trades', href: '/closed-trades' },\r\n  { name: 'Trade Stats', href: '/trade-stats' },\r\n]\r\n\r\nfunction MainNavigation() {\r\n  return (\r\n    <header className=\"bg-indigo-600\">\r\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\" aria-label=\"Top\">\r\n        <div className=\"w-full py-6 flex items-center justify-between border-b border-indigo-500 lg:border-none\">\r\n          <div className=\"flex items-center\">\r\n            <a href=\"#\">\r\n              <span className=\"sr-only\">Workflow</span>\r\n              <img\r\n                className=\"h-10 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=white\"\r\n                alt=\"\"\r\n              />\r\n            </a>\r\n            <div className=\"hidden ml-10 space-x-8 lg:block\">\r\n              {navigation.map((link) => (\r\n                <Link\r\n                  key={link.name}\r\n                  to={link.href}\r\n                  className=\"text-base font-medium text-white hover:text-indigo-50\"\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"ml-10 space-x-4\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"inline-block bg-indigo-500 py-2 px-4 border border-transparent rounded-md text-base font-medium text-white hover:bg-opacity-75\"\r\n            >\r\n              Log Out\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              className=\"inline-block bg-white py-2 px-4 border border-transparent rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\r\n            >\r\n              Sign up\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"py-4 flex flex-wrap justify-center space-x-6 lg:hidden\">\r\n          {navigation.map((link) => (\r\n            <a\r\n              key={link.name}\r\n              href={link.href}\r\n              className=\"text-base font-medium text-white hover:text-indigo-50\"\r\n            >\r\n              {link.name}\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\NewTrade\\NewTradeForm.js",["77"],"//Build a new Trade\r\n//Ticker/#Contracts/SellorBuy/OpenPrice/OpenDate/Type\r\nimport { useRef } from 'react';\r\nimport FormInput from '../UI/Input';\r\nimport Button from '../UI/Button';\r\nimport BuySellToggle from \"../UI/Toggle\";\r\n\r\nfunction NewTradeForm(props) {\r\n  // Create reference objects for the form\r\n  const tickerInputRef = useRef();\r\n  const numContractInputRef = useRef();\r\n  const openPriceInputRef = useRef();\r\n  const openDateInputRef = useRef();\r\n  const expirationDateInputRef = useRef();\r\n\r\n\r\n  function submitFormHandler(event) {\r\n    // Stop the page from reloading automatically\r\n    event.preventDefault();\r\n\r\n    // Get form values after submission\r\n    const enteredTicker = tickerInputRef.current.value;\r\n    const enteredNumContracts = numContractInputRef.current.value;\r\n    const enteredOpenPrice = openPriceInputRef.current.value;\r\n    const enteredOpenDate = openDateInputRef.current.value;\r\n    const enteredExpirationDate = expirationDateInputRef.current.value;\r\n\r\n    const newTradeData = {\r\n      ticker: enteredTicker,\r\n      numContracts: enteredNumContracts,\r\n      openPrice: enteredOpenPrice,\r\n      openDate: enteredOpenDate,\r\n      expirationDate: enteredExpirationDate\r\n    };\r\n\r\n    // Send data\r\n    console.log(newTradeData);\r\n    props.onAddTrade(newTradeData);\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitFormHandler}>\r\n      <div>\r\n        <FormInput\r\n          type=\"date\"\r\n          label=\"Open Date\"\r\n          placeholder=\"Enter Open Date\"\r\n          ref={openDateInputRef} />\r\n      </div>\r\n      <div>\r\n        <FormInput\r\n          type=\"date\"\r\n          label=\"Expiration Date\"\r\n          placeholder=\"Enter Expiration Date\"\r\n          ref={expirationDateInputRef} />\r\n      </div>\r\n      <div>\r\n        <FormInput\r\n          type=\"text\"\r\n          label=\"Ticker\"\r\n          placeholder=\"AAPL\"\r\n          ref={tickerInputRef} />\r\n      </div>\r\n      <div>\r\n        <FormInput\r\n          type=\"number\"\r\n          label=\"Number of Contracts\"\r\n          placeholder=\"Number of Contracts\"\r\n          ref={numContractInputRef} />\r\n      </div>\r\n      <div>\r\n        <BuySellToggle></BuySellToggle>\r\n      </div>\r\n      <div>\r\n        <FormInput\r\n          type=\"number\"\r\n          //step=\"0.01\"\r\n          label=\"Open Price\"\r\n          placeholder=\"Enter Open Price\"\r\n          ref={openPriceInputRef} />\r\n      </div>\r\n      \r\n      {/* <div>\r\n          <Button></Button>\r\n      </div> */}\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default NewTradeForm;","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Button.js",[],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Input.js",[],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\TradeStats.js",[],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\pages\\ClosedTrades.js",[],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Modal.js",["78","79","80"],"import { Fragment, useState, useRef } from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport { ExclamationIcon, XIcon } from '@heroicons/react/outline'\r\n\r\nexport default function Modal(props) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" static className=\"fixed z-10 inset-0 overflow-y-auto\" open={open} onClose={props.onHide}>\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"/>\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\r\n              <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  onClick={props.onHide}\r\n                >\r\n                  <span className=\"sr-only\">Close</span>\r\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"sm:flex sm:items-start\">\r\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                    New Trade Form\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">\r\n                    {props.children}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\r\n                  //onClick={() => setOpen(false)}\r\n                  onClick = {props.onHide}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type='submit'\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\r\n                  onClick={props.onHide}\r\n                  //ref={actionButtonRef}\r\n                >\r\n                  {props.modalAction.buttonTitle}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  )\r\n}","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\TradeList.js",["81","82"],"\r\nfunction TradeList(props) {\r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Ticker\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Open Date\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Days to Expiration\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Number of Contracts\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Open Price\r\n                    </th>\r\n                    \r\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                      <span className=\"sr-only\">Edit</span>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props.trades.map((trade, tradeIdx) => (\r\n                    <tr key={trade.id} className={tradeIdx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{trade.ticker}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{trade.openDate}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{trade.expirationDate}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{trade.numContracts}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{trade.openPrice}</td>      \r\n                      <td className=\"px-2 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-900 px-2\">\r\n                          Adjust\r\n                        </a>\r\n                        <a href=\"#\" className=\"text-red-600 hover:text-indigo-900 px-2\">\r\n                          Delete\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default TradeList;\r\n  ","C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\Trade.js",[],["83","84"],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\Trade\\TradeListCards.js",["85"],"C:\\Users\\Joe\\Documents\\Applications\\options-insight-app\\src\\components\\UI\\Toggle.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":15,"column":13,"nodeType":"97","endLine":15,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":36,"column":13,"nodeType":"97","endLine":39,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":42,"column":13,"nodeType":"97","endLine":45,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"99","line":1,"column":30,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"100","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":25},{"ruleId":"90","severity":1,"message":"101","line":6,"column":16,"nodeType":"92","messageId":"93","endLine":6,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":56,"column":25,"nodeType":"97","endLine":56,"endColumn":92},{"ruleId":"95","severity":1,"message":"96","line":59,"column":25,"nodeType":"97","endLine":59,"endColumn":89},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","severity":1,"message":"104","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":13},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'NewTradeForm' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'useRef' is defined but never used.","'ExclamationIcon' is defined but never used.","'setOpen' is assigned a value but never used.",["105"],["106"],"'Trade' is defined but never used.","no-global-assign","no-unsafe-negation"]